# name: test/sql/storage/partial_blocks/many_columns_rle.test
# description: Test storing many columns with RLE
# group: [partial_blocks]

load __TEST_DIR__/many_columns.db

statement ok
CREATE TABLE integers(i0 INTEGER USING COMPRESSION RLE, i1 INTEGER USING COMPRESSION RLE, i2 INTEGER USING COMPRESSION RLE, i3 INTEGER USING COMPRESSION RLE, i4 INTEGER USING COMPRESSION RLE, i5 INTEGER USING COMPRESSION RLE, i6 INTEGER USING COMPRESSION RLE, i7 INTEGER USING COMPRESSION RLE, i8 INTEGER USING COMPRESSION RLE, i9 INTEGER USING COMPRESSION RLE, i10 INTEGER USING COMPRESSION RLE, i11 INTEGER USING COMPRESSION RLE, i12 INTEGER USING COMPRESSION RLE, i13 INTEGER USING COMPRESSION RLE, i14 INTEGER USING COMPRESSION RLE, i15 INTEGER USING COMPRESSION RLE, i16 INTEGER USING COMPRESSION RLE, i17 INTEGER USING COMPRESSION RLE, i18 INTEGER USING COMPRESSION RLE, i19 INTEGER USING COMPRESSION RLE, i20 INTEGER USING COMPRESSION RLE, i21 INTEGER USING COMPRESSION RLE, i22 INTEGER USING COMPRESSION RLE, i23 INTEGER USING COMPRESSION RLE, i24 INTEGER USING COMPRESSION RLE, i25 INTEGER USING COMPRESSION RLE, i26 INTEGER USING COMPRESSION RLE, i27 INTEGER USING COMPRESSION RLE, i28 INTEGER USING COMPRESSION RLE, i29 INTEGER USING COMPRESSION RLE, i30 INTEGER USING COMPRESSION RLE, i31 INTEGER USING COMPRESSION RLE, i32 INTEGER USING COMPRESSION RLE, i33 INTEGER USING COMPRESSION RLE, i34 INTEGER USING COMPRESSION RLE, i35 INTEGER USING COMPRESSION RLE, i36 INTEGER USING COMPRESSION RLE, i37 INTEGER USING COMPRESSION RLE, i38 INTEGER USING COMPRESSION RLE, i39 INTEGER USING COMPRESSION RLE, i40 INTEGER USING COMPRESSION RLE, i41 INTEGER USING COMPRESSION RLE, i42 INTEGER USING COMPRESSION RLE, i43 INTEGER USING COMPRESSION RLE, i44 INTEGER USING COMPRESSION RLE, i45 INTEGER USING COMPRESSION RLE, i46 INTEGER USING COMPRESSION RLE, i47 INTEGER USING COMPRESSION RLE, i48 INTEGER USING COMPRESSION RLE, i49 INTEGER USING COMPRESSION RLE, i50 INTEGER USING COMPRESSION RLE, i51 INTEGER USING COMPRESSION RLE, i52 INTEGER USING COMPRESSION RLE, i53 INTEGER USING COMPRESSION RLE, i54 INTEGER USING COMPRESSION RLE, i55 INTEGER USING COMPRESSION RLE, i56 INTEGER USING COMPRESSION RLE, i57 INTEGER USING COMPRESSION RLE, i58 INTEGER USING COMPRESSION RLE, i59 INTEGER USING COMPRESSION RLE, i60 INTEGER USING COMPRESSION RLE, i61 INTEGER USING COMPRESSION RLE, i62 INTEGER USING COMPRESSION RLE, i63 INTEGER USING COMPRESSION RLE, i64 INTEGER USING COMPRESSION RLE, i65 INTEGER USING COMPRESSION RLE, i66 INTEGER USING COMPRESSION RLE, i67 INTEGER USING COMPRESSION RLE, i68 INTEGER USING COMPRESSION RLE, i69 INTEGER USING COMPRESSION RLE, i70 INTEGER USING COMPRESSION RLE, i71 INTEGER USING COMPRESSION RLE, i72 INTEGER USING COMPRESSION RLE, i73 INTEGER USING COMPRESSION RLE, i74 INTEGER USING COMPRESSION RLE, i75 INTEGER USING COMPRESSION RLE, i76 INTEGER USING COMPRESSION RLE, i77 INTEGER USING COMPRESSION RLE, i78 INTEGER USING COMPRESSION RLE, i79 INTEGER USING COMPRESSION RLE, i80 INTEGER USING COMPRESSION RLE, i81 INTEGER USING COMPRESSION RLE, i82 INTEGER USING COMPRESSION RLE, i83 INTEGER USING COMPRESSION RLE, i84 INTEGER USING COMPRESSION RLE, i85 INTEGER USING COMPRESSION RLE, i86 INTEGER USING COMPRESSION RLE, i87 INTEGER USING COMPRESSION RLE, i88 INTEGER USING COMPRESSION RLE, i89 INTEGER USING COMPRESSION RLE, i90 INTEGER USING COMPRESSION RLE, i91 INTEGER USING COMPRESSION RLE, i92 INTEGER USING COMPRESSION RLE, i93 INTEGER USING COMPRESSION RLE, i94 INTEGER USING COMPRESSION RLE, i95 INTEGER USING COMPRESSION RLE, i96 INTEGER USING COMPRESSION RLE, i97 INTEGER USING COMPRESSION RLE, i98 INTEGER USING COMPRESSION RLE, i99 INTEGER USING COMPRESSION RLE);

statement ok
INSERT INTO integers VALUES (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99);

query I
SELECT total_blocks<10 FROM pragma_database_size()
----
true

statement ok
INSERT INTO integers VALUES (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);

loop i 0 100

query I
SELECT i${i}=${i} FROM integers
----
true
false

query I
SELECT i${i}=${i}+1 FROM integers
----
false
true

endloop

restart

loop i 0 100

query I
SELECT i${i}=${i} FROM integers
----
true
false

query I
SELECT i${i}=${i}+1 FROM integers
----
false
true

endloop

query I
SELECT total_blocks<10 FROM pragma_database_size()
----
true
